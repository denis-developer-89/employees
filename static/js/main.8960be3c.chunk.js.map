{"version":3,"sources":["services/userService.js","utils/helpers/getAlphabet.js","store/actions/userActions.js","store/constant/usersConstant.js","store/reducers/usersReducer.js","store/reducers/index.js","store/store.js","components/Loader/Loader.jsx","utils/helpers/getAllMonths.js","pages/EmployessPage/EmployessPage.jsx","routes/routes.js","App.js","index.js"],"names":["UserService","getUsers","axios","get","getAlphabet","Array","from","map","e","i","x","String","fromCharCode","createAsyncThunk","a","response","usersList","data","usersSortable","forEach","character","index","arrayAlphabet","userItem","firstLetter","firstName","toUpperCase","push","status","changeUserStatus","createAction","user","payload","usersReducer","createReducer","users","isLoading","error","usersBithday","builder","addCase","pending","state","action","fulfilled","rejected","Object","keys","key","id","filter","userBithday","addDefaultCase","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","thunk","devTools","process","Loader","className","type","color","height","width","getAllMonths","length","item","Date","toLocaleString","month","EmployessPage","dispatch","useDispatch","usersSortableLists","useSelector","usersBithdaySortableLists","useMemo","usersBithdaySort","monthsArray","usersSortablByMonths","userBithdayItem","monthOfUser","dob","getMonth","useEffect","localStorage","getItem","removeItem","handleChangeStatus","event","target","value","lastName","checked","onChange","htmlFor","uuid","moment","format","routes","path","element","to","persistor","persistStore","App","loading","route","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8960be3c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nclass UserService {\r\n    static getUsers = (() => {\r\n        const url = `http://topdevsprojects.org:8081/tasks/users`;\r\n        const response = axios.get(url);\r\n        return response;\r\n    })\r\n}\r\n\r\nexport default UserService;\r\n\r\n","function getAlphabet() {\r\n    const alpha = Array.from(Array(26)).map((e, i) => i + 65);\r\n    const alphabet = alpha.map((x) => String.fromCharCode(x));\r\n    return alphabet;\r\n}\r\n\r\nexport default getAlphabet;\r\n","import {createAsyncThunk,createAction} from \"@reduxjs/toolkit\";\r\nimport UserService from \"../../services/userService\";\r\nimport {CHANGE_USER_STATUS, GET_USERS} from \"../constant/usersConstant\";\r\nimport getAlphabet from \"../../utils/helpers/getAlphabet\";\r\n\r\n\r\nexport const getUsers = createAsyncThunk(\r\n    GET_USERS,\r\n    async () => {\r\n        const response = await UserService.getUsers();\r\n        const usersList = response.data;\r\n        const usersSortable = {}\r\n        const alphabet = getAlphabet();\r\n\r\n        alphabet.forEach((character, index, arrayAlphabet) => {\r\n            usersSortable[character] = [];\r\n            usersList.forEach((userItem) => {\r\n                const firstLetter = userItem.firstName[0].toUpperCase();\r\n                if (character === firstLetter) {\r\n                    usersSortable[character].push({...userItem, status:\"not-active\"});\r\n                }\r\n            })\r\n        })\r\n        return usersSortable\r\n    }\r\n)\r\n\r\n\r\nexport const changeUserStatus = createAction(\r\n    CHANGE_USER_STATUS,\r\n    ((user,status) => {\r\n        return {\r\n            payload: {\r\n                user: user,\r\n                status: status\r\n            }\r\n        }\r\n    })\r\n)\r\n","export const GET_USERS = 'users/getusers';\r\nexport const CHANGE_USER_STATUS = 'users/changeuserstatus';\r\n\r\n","import {createReducer} from '@reduxjs/toolkit'\r\nimport {changeUserStatus, getUsers} from \"../actions/userActions\";\r\n\r\nconst initialState = {users: {}, isLoading: false, error: [], usersBithday: []}\r\n\r\n\r\nconst usersReducer = createReducer(initialState, (builder) => {\r\n    builder\r\n        .addCase(getUsers.pending, (state, action) => {\r\n            state.isLoading = true;\r\n        })\r\n        .addCase(getUsers.fulfilled, (state, action) => {\r\n            state.users = action.payload;\r\n            state.isLoading = false;\r\n        })\r\n        .addCase(getUsers.rejected, (state, action) => {\r\n            state.isLoading = false;\r\n            state.error = action.payload;\r\n        })\r\n\r\n\r\n        .addCase(changeUserStatus, (state, action) => {\r\n            Object.keys(state.users).forEach(function (key) {\r\n                 state.users[key].forEach((user) => {\r\n                    if (user.id === action.payload.user.id) {\r\n                        if (action.payload.status === \"active\") {\r\n                            user.status = action.payload.status;\r\n                            state.usersBithday.push(action.payload.user);\r\n                        } else {\r\n                            user.status = action.payload.status;\r\n                            state.usersBithday = state.usersBithday.filter((userBithday) => {\r\n                                return userBithday.id !== action.payload.user.id\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n\r\n        })\r\n\r\n\r\n        .addDefaultCase((state, action) => state)\r\n\r\n})\r\n\r\nexport default usersReducer;","import { combineReducers } from \"redux\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    usersReducer: usersReducer,\r\n})\r\n\r\n\r\nexport default rootReducer;","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport rootReducer from './reducers';\r\n// import {logger} from 'redux-logger';\r\nimport thunk from 'redux-thunk'\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {persistReducer} from 'redux-persist';\r\n\r\nconst persistConfig = {\r\n    key: 'state',\r\n    storage,\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) => {\r\n        return [...getDefaultMiddleware({serializableCheck: false}), thunk]\r\n    },\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport './Loader.scss'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"oveflow\">\r\n            <div className=\"loader\">\r\n                <ReactLoading type='spin' color='#000000' height={80} width={80}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","function getAllMonths() {\r\n    const months = Array.from({length: 12}, (item, i) => {\r\n        return new Date(0, i).toLocaleString('en-US', {month: 'long'})\r\n    });\r\n    return months;\r\n}\r\n\r\nexport default getAllMonths;\r\n","import React, {useEffect, useMemo} from 'react';\r\nimport './EmployessPage.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeUserStatus, getUsers} from \"../../store/actions/userActions\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport {v4 as uuid} from 'uuid';\r\nimport getAllMonths from \"../../utils/helpers/getAllMonths\";\r\nimport moment from 'moment';\r\n\r\nconst EmployessPage = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const usersSortableLists = useSelector((state) => {\r\n        return state.usersReducer.users;\r\n    });\r\n\r\n    const usersBithday = useSelector((state) => {\r\n        return state.usersReducer.usersBithday;\r\n    });\r\n    const isLoading = useSelector((state) => {\r\n        return state.usersReducer.isLoading;\r\n    });\r\n\r\n    const usersBithdaySortableLists = useMemo(() => {\r\n        const usersBithdaySort = [...usersBithday];\r\n        const monthsArray = getAllMonths();\r\n\r\n        // const usersSortableBylastName = usersBithdaySortable.sort((a, b) =>{\r\n        //    return a.lastName.localeCompare(b.lastName);\r\n        // })\r\n\r\n\r\n        const usersSortablByMonths = {};\r\n        monthsArray.forEach((month, index, arrayAlphabet) => {\r\n            usersBithdaySort.forEach((userBithdayItem) => {\r\n                const date = new Date(userBithdayItem.dob);\r\n                const monthOfUser = date.getMonth();\r\n\r\n                if (usersSortablByMonths[monthsArray[monthOfUser]] && usersSortablByMonths[monthsArray[monthOfUser]].length >= 0) {\r\n                    if (month === monthsArray[monthOfUser]) {\r\n                        usersSortablByMonths[monthsArray[monthOfUser]].push({...userBithdayItem});\r\n                    }\r\n                } else {\r\n                    usersSortablByMonths[monthsArray[monthOfUser]] = [];\r\n                }\r\n\r\n            })\r\n        })\r\n        return usersSortablByMonths;\r\n\r\n    }, [usersBithday])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('persist:state')) {\r\n            dispatch(getUsers())\r\n        }\r\n        return (\r\n            localStorage.removeItem('persist:state')\r\n        )\r\n    }, [dispatch])\r\n\r\n\r\n    const handleChangeStatus = (event, userItem) => {\r\n        dispatch(changeUserStatus(userItem, event.target.value))\r\n    }\r\n\r\n    return (\r\n        <div className='employess-page'>\r\n            <div className=\"employess\">\r\n                <div className=\"title\">\r\n                    <h2>Employess</h2>\r\n                </div>\r\n                <div className=\"lists\">\r\n                    {isLoading ?\r\n                        <Loader/> : usersSortableLists && Object.keys(usersSortableLists).map(function (key) {\r\n                        return (\r\n                            <div key={uuid()} className=\"list\">\r\n                                <h2>{key}</h2>\r\n                                {\r\n                                    !usersSortableLists[key].length > 0 ? \"No Employees\" :\r\n                                        <ul>\r\n                                            {\r\n                                                usersSortableLists[key].map((userItem) => {\r\n                                                    return (\r\n                                                        <li key={uuid()}>\r\n                                                            <div\r\n                                                                className={`user ${userItem.status === \"active\" ? \"active\" : \"\"}`}>\r\n                                                                <h4>{userItem.firstName} {userItem.lastName}</h4>\r\n                                                            </div>\r\n                                                            <div className=\"status\">\r\n                                                                <div className=\"radio\">\r\n                                                                    <input type=\"radio\"\r\n                                                                           id={\"not-active-\" + userItem.id}\r\n                                                                           value=\"not-active\"\r\n                                                                           checked={userItem.status === \"not-active\"}\r\n                                                                           onChange={(event) => handleChangeStatus(event, userItem)}\r\n                                                                    />\r\n                                                                    <label htmlFor={\"not-active-\" + userItem.id}>Not\r\n                                                                        active</label>\r\n                                                                </div>\r\n                                                                <div className=\"radio\">\r\n                                                                    <input type=\"radio\"\r\n                                                                           id={\"active-\" + userItem.id}\r\n                                                                           checked={userItem.status === \"active\"}\r\n                                                                           value=\"active\"\r\n                                                                           onChange={(event) => handleChangeStatus(event, userItem)}\r\n                                                                    />\r\n                                                                    <label\r\n                                                                        htmlFor={\"active-\" + userItem.id}>Active</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </ul>\r\n                                }\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"employess-bithday\">\r\n                <div className=\"title\">\r\n                    <h2>Employess Bithday</h2>\r\n                </div>\r\n\r\n                <div className=\"lists\">\r\n                    {Object.keys(usersBithdaySortableLists).length === 0 ? <h3>Employees List is empty</h3> :\r\n                        Object.keys(usersBithdaySortableLists).map(function (key) {\r\n\r\n                            return (\r\n                                <div key={uuid()} className=\"list\">\r\n                                    <h2>{key}</h2>\r\n                                    {\r\n                                        !usersBithdaySortableLists[key].length > 0 ? \"No Employees\" :\r\n                                            <ul>\r\n                                                {\r\n                                                    usersBithdaySortableLists[key].map((userBithdayItem) => {\r\n                                                        return (\r\n                                                            <li key={uuid()}>\r\n                                                                <h4>{userBithdayItem.firstName} {userBithdayItem.lastName} - {moment(userBithdayItem.dob).format('LL')}</h4>\r\n                                                            </li>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </ul>\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployessPage;","import EmployessPage from \"../pages/EmployessPage/EmployessPage\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        element: <EmployessPage/>,\r\n    },\r\n    {\r\n        path: '*',\r\n        element: <Navigate to=\"/\"/>,\r\n    }\r\n];\r\n\r\nexport default routes;","import {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport {Route, Routes, BrowserRouter} from \"react-router-dom\";\nimport {routes} from \"./routes\";\nimport \"./assets/scss/global.scss\"\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nlet persistor = persistStore(store);\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n            <BrowserRouter>\n                <Routes>\n                    {routes && routes.map((route) => (\n                        <Route key={route.path} path={route.path} element={route.element}/>\n                    ))}\n                </Routes>\n            </BrowserRouter>\n            </PersistGate>\n        </Provider>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}