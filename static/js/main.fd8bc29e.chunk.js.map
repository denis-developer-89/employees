{"version":3,"sources":["services/userService.js","utils/helpers/getAlphabet.js","store/actions/userActions.js","store/constant/usersConstant.js","store/reducers/usersReducer.js","store/reducers/index.js","store/store.js","components/Loader/Loader.jsx","utils/helpers/getAllMonths.js","pages/EmployessPage/EmployessPage.jsx","routes/routes.js","App.js","index.js"],"names":["UserService","getUsers","axios","get","headers","getAlphabet","Array","from","map","e","i","x","String","fromCharCode","createAsyncThunk","a","response","usersList","data","usersSortable","forEach","character","index","arrayAlphabet","userItem","firstLetter","firstName","toUpperCase","push","status","changeUserStatus","createAction","user","payload","usersReducer","createReducer","users","isLoading","error","usersBithday","builder","addCase","pending","state","action","fulfilled","rejected","Object","keys","key","id","filter","userBithday","addDefaultCase","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","thunk","devTools","process","Loader","className","type","color","height","width","getAllMonths","length","item","Date","toLocaleString","month","EmployessPage","dispatch","useDispatch","usersSortableLists","useSelector","usersBithdaySortableLists","useMemo","usersBithdaySort","monthsArray","usersSortableByDate","sort","b","lastName","localeCompare","dob","getTime","usersSortablByMonths","userBithdayItem","monthOfUser","getMonth","useEffect","localStorage","getItem","removeItem","handleChangeStatus","event","target","value","checked","onChange","htmlFor","uuid","moment","format","routes","path","element","to","persistor","persistStore","App","loading","route","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd8bc29e.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass UserService {\n  static getUsers = () => {\n    const url = `http://topdevsprojects.org:8081/tasks/users`;\n    const response = axios.get(url, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return response;\n  };\n}\n\nexport default UserService;\n","function getAlphabet() {\r\n  const alpha = Array.from(Array(26)).map((e, i) => i + 65);\r\n  const alphabet = alpha.map((x) => String.fromCharCode(x));\r\n  return alphabet;\r\n}\r\n\r\nexport default getAlphabet;\r\n","import { createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\r\nimport UserService from \"../../services/userService\";\r\nimport { CHANGE_USER_STATUS, GET_USERS } from \"../constant/usersConstant\";\r\nimport getAlphabet from \"../../utils/helpers/getAlphabet\";\r\n\r\nexport const getUsers = createAsyncThunk(GET_USERS, async () => {\r\n  const response = await UserService.getUsers();\r\n  const usersList = response.data;\r\n  const usersSortable = {};\r\n  const alphabet = getAlphabet();\r\n\r\n  alphabet.forEach((character, index, arrayAlphabet) => {\r\n    usersSortable[character] = [];\r\n    usersList.forEach((userItem) => {\r\n      const firstLetter = userItem.firstName[0].toUpperCase();\r\n      if (character === firstLetter) {\r\n        usersSortable[character].push({ ...userItem, status: \"not-active\" });\r\n      }\r\n    });\r\n  });\r\n  return usersSortable;\r\n});\r\n\r\nexport const changeUserStatus = createAction(\r\n  CHANGE_USER_STATUS,\r\n  (user, status) => {\r\n    return {\r\n      payload: {\r\n        user: user,\r\n        status: status,\r\n      },\r\n    };\r\n  }\r\n);\r\n","export const GET_USERS = \"users/getusers\";\r\nexport const CHANGE_USER_STATUS = \"users/changeuserstatus\";\r\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { changeUserStatus, getUsers } from \"../actions/userActions\";\n\nconst initialState = {\n  users: {},\n  isLoading: false,\n  error: [],\n  usersBithday: [],\n};\n\nconst usersReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(getUsers.pending, (state, action) => {\n      state.isLoading = true;\n    })\n    .addCase(getUsers.fulfilled, (state, action) => {\n      state.users = action.payload;\n      state.isLoading = false;\n    })\n    .addCase(getUsers.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n\n    .addCase(changeUserStatus, (state, action) => {\n      Object.keys(state.users).forEach(function (key) {\n        state.users[key].forEach((user) => {\n          if (user.id === action.payload.user.id) {\n            if (action.payload.status === \"active\") {\n              user.status = action.payload.status;\n              state.usersBithday.push(user);\n            } else {\n              user.status = action.payload.status;\n              state.usersBithday = state.usersBithday.filter((userBithday) => {\n                return userBithday.id !== action.payload.user.id;\n              });\n            }\n          }\n        });\n      });\n    })\n\n    .addDefaultCase((state, action) => state);\n});\n\nexport default usersReducer;\n","import { combineReducers } from \"redux\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  usersReducer: usersReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers\";\r\n// import {logger} from 'redux-logger';\r\nimport thunk from \"redux-thunk\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { persistReducer } from \"redux-persist\";\r\n\r\nconst persistConfig = {\r\n  key: \"state\",\r\n  storage,\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) => {\r\n    return [...getDefaultMiddleware({ serializableCheck: false }), thunk];\r\n  },\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport \"./Loader.scss\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"oveflow\">\r\n      <div className=\"loader\">\r\n        <ReactLoading type=\"spin\" color=\"#000000\" height={80} width={80} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","function getAllMonths() {\r\n  const months = Array.from({ length: 12 }, (item, i) => {\r\n    return new Date(0, i).toLocaleString(\"en-US\", { month: \"long\" });\r\n  });\r\n  return months;\r\n}\r\n\r\nexport default getAllMonths;\r\n","import React, { useEffect, useMemo } from 'react';\nimport './EmployessPage.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeUserStatus, getUsers } from '../../store/actions/userActions';\nimport Loader from '../../components/Loader/Loader';\nimport { v4 as uuid } from 'uuid';\nimport getAllMonths from '../../utils/helpers/getAllMonths';\nimport moment from 'moment';\n\nconst EmployessPage = () => {\n  const dispatch = useDispatch();\n\n  const usersSortableLists = useSelector(state => {\n    return state.usersReducer.users;\n  });\n\n  const usersBithday = useSelector(state => {\n    return state.usersReducer.usersBithday;\n  });\n  const isLoading = useSelector(state => {\n    return state.usersReducer.isLoading;\n  });\n\n  const usersBithdaySortableLists = useMemo(() => {\n    const usersBithdaySort = [...usersBithday];\n    const monthsArray = getAllMonths();\n\n    const usersSortableBylastName = usersBithdaySort.sort((a, b) => {\n      return a.lastName.localeCompare(b.lastName);\n    });\n\n    const usersSortableByDate = usersSortableBylastName.sort((a, b) => {\n      var dateA = new Date(a.dob).getTime();\n      var dateB = new Date(b.dob).getTime();\n      return dateA > dateB ? 1 : -1;\n    });\n\n    const usersSortablByMonths = {};\n    monthsArray.forEach((month, index, arrayAlphabet) => {\n      usersSortableByDate.forEach(userBithdayItem => {\n        const date = new Date(userBithdayItem.dob);\n        const monthOfUser = date.getMonth();\n\n        if (\n          usersSortablByMonths[monthsArray[monthOfUser]] &&\n          usersSortablByMonths[monthsArray[monthOfUser]].length >= 0\n        ) {\n          if (month === monthsArray[monthOfUser]) {\n            usersSortablByMonths[monthsArray[monthOfUser]].push({\n              ...userBithdayItem,\n            });\n          }\n        } else {\n          usersSortablByMonths[monthsArray[monthOfUser]] = [];\n        }\n      });\n    });\n    return usersSortablByMonths;\n  }, [usersBithday]);\n\n  useEffect(() => {\n    if (!localStorage.getItem('persist:state')) {\n      dispatch(getUsers());\n    }\n    return localStorage.removeItem('persist:state');\n  }, [dispatch]);\n\n  const handleChangeStatus = (event, userItem) => {\n    dispatch(changeUserStatus(userItem, event.target.value));\n  };\n\n  return (\n    <div className=\"employess-page\">\n      <div className=\"employess\">\n        <div className=\"title\">\n          <h2>Employess</h2>\n        </div>\n        <div className=\"lists\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            usersSortableLists &&\n            Object.keys(usersSortableLists).map(function (key) {\n              return (\n                <div key={uuid()} className=\"list\">\n                  <h2>{key}</h2>\n                  {!usersSortableLists[key].length > 0 ? (\n                    'No Employees'\n                  ) : (\n                    <ul>\n                      {usersSortableLists[key].map(userItem => {\n                        return (\n                          <li key={uuid()}>\n                            <div\n                              className={`user ${\n                                userItem.status === 'active' ? 'active' : ''\n                              }`}\n                            >\n                              <h4>\n                                {userItem.firstName} {userItem.lastName}\n                              </h4>\n                            </div>\n                            <div className=\"status\">\n                              <div className=\"radio\">\n                                <input\n                                  type=\"radio\"\n                                  id={'not-active-' + userItem.id}\n                                  value=\"not-active\"\n                                  checked={userItem.status === 'not-active'}\n                                  onChange={event =>\n                                    handleChangeStatus(event, userItem)\n                                  }\n                                />\n                                <label htmlFor={'not-active-' + userItem.id}>\n                                  Not active\n                                </label>\n                              </div>\n                              <div className=\"radio\">\n                                <input\n                                  type=\"radio\"\n                                  id={'active-' + userItem.id}\n                                  checked={userItem.status === 'active'}\n                                  value=\"active\"\n                                  onChange={event =>\n                                    handleChangeStatus(event, userItem)\n                                  }\n                                />\n                                <label htmlFor={'active-' + userItem.id}>\n                                  Active\n                                </label>\n                              </div>\n                            </div>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  )}\n                </div>\n              );\n            })\n          )}\n        </div>\n      </div>\n      <div className=\"employess-bithday\">\n        <div className=\"title\">\n          <h2>Employess Bithday</h2>\n        </div>\n        <div className=\"lists\">\n          {Object.keys(usersBithdaySortableLists).length === 0 ? (\n            <h3>Employees List is empty</h3>\n          ) : (\n            Object.keys(usersBithdaySortableLists).map(function (key) {\n              return (\n                <div key={uuid()} className=\"list\">\n                  <h2>{key}</h2>\n                  {!usersBithdaySortableLists[key].length > 0 ? (\n                    'No Employees'\n                  ) : (\n                    <ul>\n                      {usersBithdaySortableLists[key].map(userBithdayItem => {\n                        return (\n                          <li key={uuid()}>\n                            <h4>\n                              {userBithdayItem.firstName}{' '}\n                              {userBithdayItem.lastName} -{' '}\n                              {moment(userBithdayItem.dob).format('LL')}\n                            </h4>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  )}\n                </div>\n              );\n            })\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployessPage;\n","import EmployessPage from \"../pages/EmployessPage/EmployessPage\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/employees\",\r\n    element: <EmployessPage />,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    element: <Navigate to=\"/employees\" />,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport { routes } from \"./routes\";\nimport \"./assets/scss/global.scss\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore } from \"redux-persist\";\nlet persistor = persistStore(store);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <Routes>\n            {routes &&\n              routes.map((route) => (\n                <Route\n                  key={route.path}\n                  path={route.path}\n                  element={route.element}\n                />\n              ))}\n          </Routes>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}