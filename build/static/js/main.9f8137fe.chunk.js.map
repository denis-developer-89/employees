{"version":3,"sources":["services/userService.js","utils/helpers/getAlphabet.js","store/actions/userActions.js","store/constant/usersConstant.js","store/reducers/usersReducer.js","store/reducers/index.js","store/store.js","components/Loader/Loader.jsx","pages/EmployessPage/components/Employess/EmployessItem.jsx","pages/EmployessPage/components/Employess/Employess.jsx","utils/helpers/getAllMonths.js","pages/EmployessPage/components/EmployessBithday/EmployessBithdayItem.jsx","pages/EmployessPage/components/EmployessBithday/EmployessBithday.jsx","pages/EmployessPage/EmployessPage.jsx","routes/routes.js","App.js","index.js"],"names":["UserService","getUsers","axios","get","getAlphabet","Array","from","map","e","i","x","String","fromCharCode","createAsyncThunk","a","response","usersList","data","usersSortable","forEach","character","userItem","firstLetter","firstName","toUpperCase","push","status","console","log","changeUserStatus","createAction","user","payload","usersReducer","createReducer","users","isLoading","error","usersBithday","builder","addCase","pending","state","action","fulfilled","rejected","Object","keys","key","id","filter","userBithday","addDefaultCase","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","thunk","devTools","process","Loader","className","type","color","height","width","Employess","dispatch","useDispatch","handleChangeStatus","event","target","value","lastName","checked","onChange","htmlFor","usersSortableLists","useSelector","length","EmployessItem","uuid","getAllMonths","item","Date","toLocaleString","month","userBithdayItem","moment","dob","format","EmployessBithday","usersBithdaySortableLists","useMemo","usersBithdaySort","monthsArray","usersSortableByDate","sort","b","localeCompare","getTime","usersSortablByMonths","index","arrayAlphabet","monthOfUser","getMonth","EmployessBithdayItem","EmployessPage","useEffect","localStorage","getItem","removeItem","routes","path","element","to","persistor","persistStore","App","loading","route","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f8137fe.chunk.js","sourcesContent":["import axios from \"axios\";\n\nclass UserService {\n  static getUsers = () => {\n    const url = `http://topdevsprojects.org:8081/tasks/users`;\n    const response = axios.get(url);\n    return response;\n  };\n}\n\nexport default UserService;\n","function getAlphabet() {\r\n  const alpha = Array.from(Array(26)).map((e, i) => i + 65);\r\n  const alphabet = alpha.map((x) => String.fromCharCode(x));\r\n  return alphabet;\r\n}\r\n\r\nexport default getAlphabet;\r\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit';\nimport UserService from '../../services/userService';\nimport { CHANGE_USER_STATUS, GET_USERS } from '../constant/usersConstant';\nimport getAlphabet from '../../utils/helpers/getAlphabet';\n\nexport const getUsers = createAsyncThunk(GET_USERS, async () => {\n  try {\n    const response = await UserService.getUsers();\n    const usersList = response.data;\n    const usersSortable = {};\n    const alphabet = getAlphabet();\n    alphabet.forEach((character) => {\n      usersSortable[character] = [];\n      usersList.forEach(userItem => {\n        const firstLetter = userItem.firstName[0].toUpperCase();\n        if (character === firstLetter) {\n          usersSortable[character].push({ ...userItem,status: 'not-active' });\n        }\n      });\n    });\n    return usersSortable;\n  } catch (error) {\n    console.log(error.response);\n  }\n});\n\nexport const changeUserStatus = createAction(\n  CHANGE_USER_STATUS,\n  (user, status) => {\n    return {\n      payload: {\n        user: user,\n        status: status,\n      },\n    };\n  },\n);\n","export const GET_USERS = \"users/getusers\";\r\nexport const CHANGE_USER_STATUS = \"users/changeuserstatus\";\r\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { changeUserStatus, getUsers } from \"../actions/userActions\";\n\nconst initialState = {\n  users: {},\n  isLoading: false,\n  error: [],\n  usersBithday: [],\n};\n\nconst usersReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(getUsers.pending, (state, action) => {\n      state.isLoading = true;\n    })\n    .addCase(getUsers.fulfilled, (state, action) => {\n      state.users = action.payload;\n      state.isLoading = false;\n    })\n    .addCase(getUsers.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n\n    .addCase(changeUserStatus, (state, action) => {\n      Object.keys(state.users).forEach(function (key) {\n        state.users[key].forEach((user) => {\n          if (user.id === action.payload.user.id) {\n            if (action.payload.status === \"active\") {\n              user.status = action.payload.status;\n              state.usersBithday.push(user);\n            } else {\n              user.status = action.payload.status;\n              state.usersBithday = state.usersBithday.filter((userBithday) => {\n                return userBithday.id !== action.payload.user.id;\n              });\n            }\n          }\n        });\n      });\n    })\n\n    .addDefaultCase((state, action) => state);\n});\n\nexport default usersReducer;\n","import { combineReducers } from \"redux\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  usersReducer: usersReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./reducers\";\n// import {logger} from 'redux-logger';\nimport thunk from \"redux-thunk\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"state\",\n  storage:storage,\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => {\n    return [...getDefaultMiddleware({ serializableCheck: false }), thunk];\n  },\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nexport default store;\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport \"./Loader.scss\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"oveflow\">\r\n      <div className=\"loader\">\r\n        <ReactLoading type=\"spin\" color=\"#000000\" height={80} width={80} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { useDispatch } from 'react-redux';\nimport { changeUserStatus } from '../../../../store/actions/userActions';\n\nconst Employess = ({userItem}) => {\n  const dispatch = useDispatch();\n\n  const handleChangeStatus = (event, userItem) => {\n    dispatch(changeUserStatus(userItem, event.target.value));\n  };\n\n  return (\n    <li>\n      <div\n        className={`user ${\n          userItem.status === 'active' ? 'active' : ''\n        }`}\n      >\n        <h4>\n          {userItem.firstName} {userItem.lastName}\n        </h4>\n      </div>\n      <div className='status'>\n        <div className='radio'>\n          <input\n            type='radio'\n            id={'not-active-' + userItem.id}\n            value='not-active'\n            checked={userItem.status === 'not-active'}\n            onChange={event =>\n              handleChangeStatus(event, userItem)\n            }\n          />\n          <label htmlFor={'not-active-' + userItem.id}>\n            Not active\n          </label>\n        </div>\n        <div className='radio'>\n          <input\n            type='radio'\n            id={'active-' + userItem.id}\n            checked={userItem.status === 'active'}\n            value='active'\n            onChange={event =>\n              handleChangeStatus(event, userItem)\n            }\n          />\n          <label htmlFor={'active-' + userItem.id}>\n            Active\n          </label>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default Employess;\n","import './Employess.scss';\nimport {useSelector } from 'react-redux';\nimport Loader from '../../../../components/Loader/Loader';\nimport { v4 as uuid } from 'uuid';\nimport EmployessItem from './EmployessItem';\n\nconst Employess = () => {\n  const usersSortableLists = useSelector(state => {\n    return state.usersReducer.users;\n  });\n\n  const isLoading = useSelector(state => {\n    return state.usersReducer.isLoading;\n  });\n\n\n  return (\n    <div className=\"employess\">\n      <div className=\"title\">\n        <h2>Employess</h2>\n      </div>\n      <div className=\"lists\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          usersSortableLists &&\n          Object.keys(usersSortableLists).map(function (key) {\n            return (\n              <div key={uuid()} className=\"list\">\n                <h2>{key}</h2>\n                {!usersSortableLists[key].length > 0 ? (\n                  'No Employees'\n                ) : (\n                  <ul>\n                    {usersSortableLists[key].map(userItem => {\n                        return  <EmployessItem  key={uuid()} userItem={userItem}/>\n                    })}\n                  </ul>\n                )}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Employess;\n","function getAllMonths() {\r\n  const months = Array.from({ length: 12 }, (item, i) => {\r\n    return new Date(0, i).toLocaleString(\"en-US\", { month: \"long\" });\r\n  });\r\n  return months;\r\n}\r\n\r\nexport default getAllMonths;\r\n","import moment from 'moment';\nimport React from 'react';\n\nconst Employess = ({userBithdayItem}) => {\n\n  return (\n    <li>\n      <h4>\n        {userBithdayItem.firstName}{' '}\n        {userBithdayItem.lastName} -{' '}\n        {moment(userBithdayItem.dob).format('LL')}\n      </h4>\n    </li>\n  );\n};\n\nexport default Employess;\n","import React, {useMemo } from 'react';\nimport './EmployessBithday.scss';\nimport { useSelector } from 'react-redux';\nimport { v4 as uuid } from 'uuid';\nimport getAllMonths from '../../../../utils/helpers/getAllMonths';\nimport EmployessBithdayItem from './EmployessBithdayItem';\n\nconst EmployessBithday = () => {\n  const usersBithday = useSelector(state => {\n    return state.usersReducer.usersBithday;\n  });\n  const usersBithdaySortableLists = useMemo(() => {\n    const usersBithdaySort = [...usersBithday];\n    const monthsArray = getAllMonths();\n\n    const usersSortableBylastName = usersBithdaySort.sort((a, b) => {\n      return a.lastName.localeCompare(b.lastName);\n    });\n\n    const usersSortableByDate = usersSortableBylastName.sort((a, b) => {\n      var dateA = new Date(a.dob).getTime();\n      var dateB = new Date(b.dob).getTime();\n      return dateA > dateB ? 1 : -1;\n    });\n\n    const usersSortablByMonths = {};\n    monthsArray.forEach((month, index, arrayAlphabet) => {\n      usersSortableByDate.forEach(userBithdayItem => {\n        const date = new Date(userBithdayItem.dob);\n        const monthOfUser = date.getMonth();\n\n        if (\n          usersSortablByMonths[monthsArray[monthOfUser]] &&\n          usersSortablByMonths[monthsArray[monthOfUser]].length >= 0\n        ) {\n          if (month === monthsArray[monthOfUser]) {\n            usersSortablByMonths[monthsArray[monthOfUser]].push({\n              ...userBithdayItem,\n            });\n          }\n        } else {\n          usersSortablByMonths[monthsArray[monthOfUser]] = [];\n        }\n      });\n    });\n    return usersSortablByMonths;\n  }, [usersBithday]);\n\n\n  return (\n    <div className=\"employess-page\">\n      <div className=\"employess-bithday\">\n        <div className=\"title\">\n          <h2>Employess Bithday</h2>\n        </div>\n        <div className=\"lists\">\n          {Object.keys(usersBithdaySortableLists).length === 0 ? (\n            <h3>Employees List is empty</h3>\n          ) : (\n            Object.keys(usersBithdaySortableLists).map(function (key) {\n              return (\n                <div key={uuid()} className=\"list\">\n                  <h2>{key}</h2>\n                  {!usersBithdaySortableLists[key].length > 0 ? (\n                    'No Employees'\n                  ) : (\n                    <ul>\n                      {usersBithdaySortableLists[key].map(userBithdayItem => {\n                        return <EmployessBithdayItem   key={uuid()} userBithdayItem={userBithdayItem}/>\n                      })}\n                    </ul>\n                  )}\n                </div>\n              );\n            })\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployessBithday;\n","import React, { useEffect} from 'react';\nimport './EmployessPage.scss';\nimport { useDispatch } from 'react-redux';\nimport {  getUsers } from '../../store/actions/userActions';\nimport Employess from './components/Employess/Employess';\nimport EmployessBithday from './components/EmployessBithday/EmployessBithday';\n\nconst EmployessPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!localStorage.getItem('persist:state')) {\n      dispatch(getUsers());\n    }\n    return localStorage.removeItem('persist:state');\n  }, [dispatch]);\n\n  return (\n    <div className=\"employess-page\">\n      <Employess/>\n      <EmployessBithday/>\n    </div>\n  );\n};\n\nexport default EmployessPage;\n","import EmployessPage from \"../pages/EmployessPage/EmployessPage\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/employees\",\r\n    element: <EmployessPage />,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    element: <Navigate to=\"/employees\" />,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport { routes } from \"./routes\";\nimport \"./assets/scss/global.scss\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore } from \"redux-persist\";\nlet persistor = persistStore(store);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <Routes>\n            {routes &&\n              routes.map((route) => (\n                <Route\n                  key={route.path}\n                  path={route.path}\n                  element={route.element}\n                />\n              ))}\n          </Routes>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}